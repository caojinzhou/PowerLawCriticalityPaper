summary(m.1)
setwd("~/Dropbox/Ashwin/Q92P2865PowSpecPatches")
Gallpatches<-list.files(getwd(),recursive=TRUE)
GVps<-lapply(Gallpatches,function(x){read.csv(x,header=TRUE)})
GPSpec=GVps
GPSpecF = lapply(GPSpec, function(x){x[,2]})
Xvec<-(0:512)/1024
ds<-data.frame(y=unlist(GPSpecF),x=rep(Xvec,37))
dataC<-matrix(nrow=length(Xvec)-1,ncol=3)
rhs<-function(x,b0,b1){b0*x^b1}
PSpecAVG<-rep(0,times=length(ds$x)/37)
ds<-data.frame(y=unlist(GPSpecF),x=rep(Xvec,50))
dataC<-matrix(nrow=length(Xvec)-1,ncol=3)
rhs<-function(x,b0,b1){b0*x^b1}
PSpecAVG<-rep(0,times=length(ds$x)/50)
SDvec<--rep(0,times=length(ds$x)/50)
for(i in 1:length(PSpecAVG)){PSpecAVG[i]<-mean(c(ds$y[which(ds$x==(i-1)/1024)]))
SDvec[i]<-sqrt(var((c(ds$y[which(ds$x==(i-1)/1024)]))))}
for(i in 1:50){
UC=0.3
ds1<-ds[-c(which(ds$x<i/1024),which(ds$x>UC)),]
PSpecAVG1<-PSpecAVG[i+1:min(which(ds$x>UC))]
SDvec1<-SDvec[i+1:min(which(ds$x>UC))]
#m.2<-nls(y~ rhs(x,intercept,power), data=ds1, start=list(power=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
#                                  intercept=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1])))
#,trace=T)
m.2 <- nlsLM(formula=y~(k*x^a),data=ds1,start=list(a=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
k=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1]))),
weights = wfct(1/error^2),control = nls.lm.control(maxiter=1024,nprint=1))
a<-summary(m.2)$coefficients[1]
C<-summary(m.2)$coefficients[2]
cx = 1-cumsum(as.numeric(PSpecAVG1)/sum(PSpecAVG1)) # construct the empirical CDF
drat<-Xvec[(i+1):min(which(ds$x>UC))]
cf<-1-cumsum((C*drat^a)/
sum(C*drat^a))
#mapply(function(X,Y){1-cumsum((Y*xmins[i:length(xmins)]^X)/sum(Y*xmins[i:length(xmins)]^X))},X=a,Y=C)
#cf<-mapply(function(X,Y){
# lapply(1:18,function(l){1-cumsum((Y[[l]]*xmins[i:length(xmins)]^X[[l]])/
# sum(Y[[l]]*xmins[i:length(xmins)]^X[[l]]))}),
#},X=a,Y=C)
#mapply(function(X,col){print(abs(X-cf[,col]))},X=cx,col=1:length(z2))
dataC[i,1]<-max(abs(cx-cf))
dataC[i,2]<-a
dataC[i,3]<-C
}
i = which(dataC[1:100,1]==min(dataC[1:100,1]))
i
i = which(dataC[1:50,1]==min(dataC[1:50,1]))
i
for(i in 51:200){
UC=0.3
ds1<-ds[-c(which(ds$x<i/1024),which(ds$x>UC)),]
PSpecAVG1<-PSpecAVG[i+1:min(which(ds$x>UC))]
SDvec1<-SDvec[i+1:min(which(ds$x>UC))]
#m.2<-nls(y~ rhs(x,intercept,power), data=ds1, start=list(power=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
#                                  intercept=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1])))
#,trace=T)
m.2 <- nlsLM(formula=y~(k*x^a),data=ds1,start=list(a=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
k=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1]))),
weights = wfct(1/error^2),control = nls.lm.control(maxiter=1024,nprint=1))
a<-summary(m.2)$coefficients[1]
C<-summary(m.2)$coefficients[2]
cx = 1-cumsum(as.numeric(PSpecAVG1)/sum(PSpecAVG1)) # construct the empirical CDF
drat<-Xvec[(i+1):min(which(ds$x>UC))]
cf<-1-cumsum((C*drat^a)/
sum(C*drat^a))
#mapply(function(X,Y){1-cumsum((Y*xmins[i:length(xmins)]^X)/sum(Y*xmins[i:length(xmins)]^X))},X=a,Y=C)
#cf<-mapply(function(X,Y){
# lapply(1:18,function(l){1-cumsum((Y[[l]]*xmins[i:length(xmins)]^X[[l]])/
# sum(Y[[l]]*xmins[i:length(xmins)]^X[[l]]))}),
#},X=a,Y=C)
#mapply(function(X,col){print(abs(X-cf[,col]))},X=cx,col=1:length(z2))
dataC[i,1]<-max(abs(cx-cf))
dataC[i,2]<-a
dataC[i,3]<-C
}
i = which(dataC[1:200,1]==min(dataC[1:200,1]))
i
i=154
summary(m.2)
ds1<-ds[-c(which(ds$x<i/1024),which(ds$x>UC)),]
m.2 <- nlsLM(formula=y~(k*x^a),data=ds1,start=list(a=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
k=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1]))),
weights = wfct(1/error^2),control = nls.lm.control(maxiter=1024,nprint=1))
summary(m.2)
Xvec[i]
ds1<-ds[-c(which(ds$x<i/1024),which(ds$x>UC)),]
m.1 <- nlsLM(formula=y~(k*x^a),data=ds1,start=list(a=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
k=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1]))),
weights = wfct(1/error^2),control = nls.lm.control(maxiter=1024,nprint=1))
summary(m.1)
ds$pred <- predict(m.2)
se = summary(m.2)$sigma
ci = outer(ds$pred, c(outer(se, c(-1,1), '*'))*1.96, '+')
ii = order(ds$x)
# typical plot with confidence interval
with(ds[ii,], points(x, pred, ylim=range(ci), type='l',col="green"))
matlines(ds[ii,'x'], ci[ii,], lty=2, col=1)
m.2 <- nlsLM(formula=y~ rhs(x,k,a,x0),data=ds,start=list(k=0.000025,x0=0,
a=0.005),
weights = wfct(1/error^2),control = nls.lm.control(maxiter=1024,nprint=1))
rhs<-function(x,k,a,x0){k*a/((x-x0)^2+a^2)}
m.2 <- nlsLM(formula=y~ rhs(x,k,a,x0),data=ds,start=list(k=0.000025,x0=0,
a=0.005),
weights = wfct(1/error^2),control = nls.lm.control(maxiter=1024,nprint=1))
ds$pred <- predict(m.2)
se = summary(m.2)$sigma
ci = outer(ds$pred, c(outer(se, c(-1,1), '*'))*1.96, '+')
ii = order(ds$x)
# typical plot with confidence interval
with(ds[ii,], points(x, pred, ylim=range(ci), type='l',col="green"))
matlines(ds[ii,'x'], ci[ii,], lty=2, col=1)
plot(ds$y~ds$x,pch=16)
plot(ds$y~ds$x,pch=16,log="xy")
ds$pred <- predict(m.2)
se = summary(m.2)$sigma
ci = outer(ds$pred, c(outer(se, c(-1,1), '*'))*1.96, '+')
ii = order(ds$x)
# typical plot with confidence interval
with(ds[ii,], points(x, pred, ylim=range(ci), type='l',col="green"))
matlines(ds[ii,'x'], ci[ii,], lty=2, col=1)
summary(m.2)
ds1<-ds[-c(which(ds$x<i/1024),which(ds$x>UC)),]
m.1 <- nlsLM(formula=y~(k*x^a),data=ds1,start=list(a=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
k=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1]))),
weights = wfct(1/error^2),control = nls.lm.control(maxiter=1024,nprint=1))
summary(m.1)
summary(m.2)
summary(m.1)
plot(m.2)
plot(m.1)
plot(m.2)
plot(m.1)
plot(ds1$y~ds1$x,log"xy",pch=16)
plot(ds1$y~ds1$x,log="xy",pch=16)
setwd("~/Dropbox/Ashwin/Q92P2852PowSpecPatches")
Gallpatches<-list.files(getwd(),recursive=TRUE)
GVps<-lapply(Gallpatches,function(x){read.csv(x,header=TRUE)})
GPSpec=GVps
GPSpecF = lapply(GPSpec, function(x){x[,2]})
Xvec<-(0:512)/1024
ds<-data.frame(y=unlist(GPSpecF),x=rep(Xvec,37))
dataC<-matrix(nrow=length(Xvec)-1,ncol=3)
rhs<-function(x,b0,b1){b0*x^b1}
PSpecAVG<-rep(0,times=length(ds$x)/37)
SDvec<--rep(0,times=length(ds$x)/37)
for(i in 1:length(PSpecAVG)){PSpecAVG[i]<-mean(c(ds$y[which(ds$x==(i-1)/1024)]))
SDvec[i]<-sqrt(var((c(ds$y[which(ds$x==(i-1)/1024)]))))}
for(i in 1:50){
UC=0.3
ds1<-ds[-c(which(ds$x<i/1024),which(ds$x>UC)),]
PSpecAVG1<-PSpecAVG[i+1:min(which(ds$x>UC))]
SDvec1<-SDvec[i+1:min(which(ds$x>UC))]
#m.2<-nls(y~ rhs(x,intercept,power), data=ds1, start=list(power=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
#                                  intercept=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1])))
#,trace=T)
m.2 <- nlsLM(formula=y~(k*x^a),data=ds1,start=list(a=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
k=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1]))),
weights = wfct(1/error^2),control = nls.lm.control(maxiter=1024,nprint=1))
a<-summary(m.2)$coefficients[1]
C<-summary(m.2)$coefficients[2]
cx = 1-cumsum(as.numeric(PSpecAVG1)/sum(PSpecAVG1)) # construct the empirical CDF
drat<-Xvec[(i+1):min(which(ds$x>UC))]
cf<-1-cumsum((C*drat^a)/
sum(C*drat^a))
#mapply(function(X,Y){1-cumsum((Y*xmins[i:length(xmins)]^X)/sum(Y*xmins[i:length(xmins)]^X))},X=a,Y=C)
#cf<-mapply(function(X,Y){
# lapply(1:18,function(l){1-cumsum((Y[[l]]*xmins[i:length(xmins)]^X[[l]])/
# sum(Y[[l]]*xmins[i:length(xmins)]^X[[l]]))}),
#},X=a,Y=C)
#mapply(function(X,col){print(abs(X-cf[,col]))},X=cx,col=1:length(z2))
dataC[i,1]<-max(abs(cx-cf))
dataC[i,2]<-a
dataC[i,3]<-C
}
i = which(dataC[1:50,1]==min(dataC[1:50,1]))
i
dataC[1,]
dataC[18,]
dataC[17,]
Gallpatches
ds$pred <- predict(m.2)
se = summary(m.2)$sigma
ci = outer(ds$pred, c(outer(se, c(-1,1), '*'))*1.96, '+')
ii = order(ds$x)
# typical plot with confidence interval
with(ds[ii,], points(x, pred, ylim=range(ci), type='l',col="green"))
matlines(ds[ii,'x'], ci[ii,], lty=2, col=1)
ds1<-ds[-c(which(ds$x<i/1024),which(ds$x>UC)),]
m.1 <- nlsLM(formula=y~(k*x^a),data=ds1,start=list(a=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
k=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1]))),
weights = wfct(1/error^2),control = nls.lm.control(maxiter=1024,nprint=1))
summary(m.1)
ds1$pred <- predict(m.2)
se = summary(m.2)$sigma
ci = outer(ds1$pred, c(outer(se, c(-1,1), '*'))*1.96, '+')
ii = order(ds1$x)
# typical plot with confidence interval
with(ds1[ii,], points(x, pred, ylim=range(ci), type='l',col="green"))
matlines(ds1[ii,'x'], ci[ii,], lty=2, col=1)
#
ds1$pred <- predict(m.1)
se = summary(m.1)$sigma
ci = outer(ds1$pred, c(outer(se, c(-1,1), '*'))*1.96, '+')
ii = order(ds1$x)
# typical plot with confidence interval
with(ds1[ii,], points(x, pred, ylim=range(ci), type='l',col="green"))
matlines(ds1[ii,'x'], ci[ii,], lty=2, col=1)
Xvec<-(0:512)/1024
ds<-data.frame(y=unlist(GPSpecF),x=rep(Xvec,38))
dataC<-matrix(nrow=length(Xvec)-1,ncol=3)
rhs<-function(x,b0,b1){b0*x^b1}
PSpecAVG<-rep(0,times=length(ds$x)/38)
SDvec<--rep(0,times=length(ds$x)/38)
for(i in 1:length(PSpecAVG)){PSpecAVG[i]<-mean(c(ds$y[which(ds$x==(i-1)/1024)]))
SDvec[i]<-sqrt(var((c(ds$y[which(ds$x==(i-1)/1024)]))))}
for(i in 1:50){
UC=0.3
ds1<-ds[-c(which(ds$x<i/1024),which(ds$x>UC)),]
PSpecAVG1<-PSpecAVG[i+1:min(which(ds$x>UC))]
SDvec1<-SDvec[i+1:min(which(ds$x>UC))]
#m.2<-nls(y~ rhs(x,intercept,power), data=ds1, start=list(power=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
#                                  intercept=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1])))
#,trace=T)
m.2 <- nlsLM(formula=y~(k*x^a),data=ds1,start=list(a=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
k=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1]))),
weights = wfct(1/error^2),control = nls.lm.control(maxiter=1024,nprint=1))
a<-summary(m.2)$coefficients[1]
C<-summary(m.2)$coefficients[2]
cx = 1-cumsum(as.numeric(PSpecAVG1)/sum(PSpecAVG1)) # construct the empirical CDF
drat<-Xvec[(i+1):min(which(ds$x>UC))]
cf<-1-cumsum((C*drat^a)/
sum(C*drat^a))
#mapply(function(X,Y){1-cumsum((Y*xmins[i:length(xmins)]^X)/sum(Y*xmins[i:length(xmins)]^X))},X=a,Y=C)
#cf<-mapply(function(X,Y){
# lapply(1:18,function(l){1-cumsum((Y[[l]]*xmins[i:length(xmins)]^X[[l]])/
# sum(Y[[l]]*xmins[i:length(xmins)]^X[[l]]))}),
#},X=a,Y=C)
#mapply(function(X,col){print(abs(X-cf[,col]))},X=cx,col=1:length(z2))
dataC[i,1]<-max(abs(cx-cf))
dataC[i,2]<-a
dataC[i,3]<-C
}
i = which(dataC[1:50,1]==min(dataC[1:50,1]))
i
Gallpatches<-list.files(getwd(),recursive=TRUE)
GVps<-lapply(Gallpatches,function(x){read.csv(x,header=TRUE)})
GPSpec=GVps
GPSpecF = lapply(GPSpec, function(x){x[,2]})
Gallpatches
Xvec<-(0:512)/1024
ds<-data.frame(y=unlist(GPSpecF),x=rep(Xvec,38))
dataC<-matrix(nrow=length(Xvec)-1,ncol=3)
rhs<-function(x,b0,b1){b0*x^b1}
PSpecAVG<-rep(0,times=length(ds$x)/38)
SDvec<--rep(0,times=length(ds$x)/38)
for(i in 1:length(PSpecAVG)){PSpecAVG[i]<-mean(c(ds$y[which(ds$x==(i-1)/1024)]))
SDvec[i]<-sqrt(var((c(ds$y[which(ds$x==(i-1)/1024)]))))}
Xvec<-(0:512)/1024
ds<-data.frame(y=unlist(GPSpecF),x=rep(Xvec,37))
dataC<-matrix(nrow=length(Xvec)-1,ncol=3)
rhs<-function(x,b0,b1){b0*x^b1}
PSpecAVG<-rep(0,times=length(ds$x)/37)
SDvec<--rep(0,times=length(ds$x)/37)
for(i in 1:length(PSpecAVG)){PSpecAVG[i]<-mean(c(ds$y[which(ds$x==(i-1)/1024)]))
SDvec[i]<-sqrt(var((c(ds$y[which(ds$x==(i-1)/1024)]))))}
for(i in 1:50){
UC=0.3
ds1<-ds[-c(which(ds$x<i/1024),which(ds$x>UC)),]
PSpecAVG1<-PSpecAVG[i+1:min(which(ds$x>UC))]
SDvec1<-SDvec[i+1:min(which(ds$x>UC))]
#m.2<-nls(y~ rhs(x,intercept,power), data=ds1, start=list(power=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
#                                  intercept=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1])))
#,trace=T)
m.2 <- nlsLM(formula=y~(k*x^a),data=ds1,start=list(a=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
k=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1]))),
weights = wfct(1/error^2),control = nls.lm.control(maxiter=1024,nprint=1))
a<-summary(m.2)$coefficients[1]
C<-summary(m.2)$coefficients[2]
cx = 1-cumsum(as.numeric(PSpecAVG1)/sum(PSpecAVG1)) # construct the empirical CDF
drat<-Xvec[(i+1):min(which(ds$x>UC))]
cf<-1-cumsum((C*drat^a)/
sum(C*drat^a))
#mapply(function(X,Y){1-cumsum((Y*xmins[i:length(xmins)]^X)/sum(Y*xmins[i:length(xmins)]^X))},X=a,Y=C)
#cf<-mapply(function(X,Y){
# lapply(1:18,function(l){1-cumsum((Y[[l]]*xmins[i:length(xmins)]^X[[l]])/
# sum(Y[[l]]*xmins[i:length(xmins)]^X[[l]]))}),
#},X=a,Y=C)
#mapply(function(X,col){print(abs(X-cf[,col]))},X=cx,col=1:length(z2))
dataC[i,1]<-max(abs(cx-cf))
dataC[i,2]<-a
dataC[i,3]<-C
}
i = which(dataC[1:50,1]==min(dataC[1:50,1]))
i
ds<-data.frame(y=unlist(GPSpecF),x=rep(Xvec,37))
dataC<-matrix(nrow=length(Xvec)-1,ncol=3)
rhs<-function(x,b0,b1){b0*x^b1}
PSpecAVG<-rep(0,times=length(ds$x)/37)
SDvec<--rep(0,times=length(ds$x)/37)
for(i in 1:length(PSpecAVG)){PSpecAVG[i]<-mean(c(ds$y[which(ds$x==(i-1)/1024)]))
SDvec[i]<-sqrt(var((c(ds$y[which(ds$x==(i-1)/1024)]))))}
for(i in 1:50){
UC=0.3
ds1<-ds[-c(which(ds$x<i/1024),which(ds$x>UC)),]
PSpecAVG1<-PSpecAVG[i+1:min(which(ds$x>UC))]
SDvec1<-SDvec[i+1:min(which(ds$x>UC))]
#m.2<-nls(y~ rhs(x,intercept,power), data=ds1, start=list(power=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
#                                  intercept=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1])))
#,trace=T)
m.2 <- nlsLM(formula=y~(k*x^a),data=ds1,start=list(a=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
k=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1]))),
weights = wfct(1/error^2),control = nls.lm.control(maxiter=1024,nprint=1))
a<-summary(m.2)$coefficients[1]
C<-summary(m.2)$coefficients[2]
cx = 1-cumsum(as.numeric(PSpecAVG1)/sum(PSpecAVG1)) # construct the empirical CDF
drat<-Xvec[(i+1):min(which(ds$x>UC))]
cf<-1-cumsum((C*drat^a)/
sum(C*drat^a))
#mapply(function(X,Y){1-cumsum((Y*xmins[i:length(xmins)]^X)/sum(Y*xmins[i:length(xmins)]^X))},X=a,Y=C)
#cf<-mapply(function(X,Y){
# lapply(1:18,function(l){1-cumsum((Y[[l]]*xmins[i:length(xmins)]^X[[l]])/
# sum(Y[[l]]*xmins[i:length(xmins)]^X[[l]]))}),
#},X=a,Y=C)
#mapply(function(X,col){print(abs(X-cf[,col]))},X=cx,col=1:length(z2))
dataC[i,1]<-max(abs(cx-cf))
dataC[i,2]<-a
dataC[i,3]<-C
}
i = which(dataC[1:50,1]==min(dataC[1:50,1]))
i
dataC[18,]
dataC[1,]
dataC[17,]
for(i in 1:50){
UC=0.3
ds1<-ds[-c(which(ds$x<i/1024),which(ds$x>UC)),]
PSpecAVG1<-PSpecAVG[i+1:min(which(ds$x>UC))]
SDvec1<-SDvec[i+1:min(which(ds$x>UC))]
#m.2<-nls(y~ rhs(x,intercept,power), data=ds1, start=list(power=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
#                                  intercept=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1])))
#,trace=T)
m.2 <- nlsLM(formula=y~(k*x^a),data=ds1,start=list(a=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
k=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1]))),
weights = wfct(1/error^2),control = nls.lm.control(maxiter=1024,nprint=1))
a<-summary(m.2)$coefficients[1]
C<-summary(m.2)$coefficients[2]
cx = 1-cumsum(as.numeric(PSpecAVG1)/sum(PSpecAVG1)) # construct the empirical CDF
drat<-Xvec[(i+1):min(which(ds$x>UC))]
cf<-1-(cumsum((C*drat^a)/
sum(C*drat^a)))
#mapply(function(X,Y){1-cumsum((Y*xmins[i:length(xmins)]^X)/sum(Y*xmins[i:length(xmins)]^X))},X=a,Y=C)
#cf<-mapply(function(X,Y){
# lapply(1:18,function(l){1-cumsum((Y[[l]]*xmins[i:length(xmins)]^X[[l]])/
# sum(Y[[l]]*xmins[i:length(xmins)]^X[[l]]))}),
#},X=a,Y=C)
#mapply(function(X,col){print(abs(X-cf[,col]))},X=cx,col=1:length(z2))
dataC[i,1]<-max(abs(cx-cf))
dataC[i,2]<-a
dataC[i,3]<-C
}
warnings()
length(ds$x)/37
for(i in 1:50){
UC=0.3
ds1<-ds[-c(which(ds$x<i/1024),which(ds$x>UC)),]
PSpecAVG1<-PSpecAVG[(i+1):min(which(ds$x>UC))]
SDvec1<-SDvec[(i+1):min(which(ds$x>UC))]
#m.2<-nls(y~ rhs(x,intercept,power), data=ds1, start=list(power=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
#                                  intercept=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1])))
#,trace=T)
m.2 <- nlsLM(formula=y~(k*x^a),data=ds1,start=list(a=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
k=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1]))),
weights = wfct(1/error^2),control = nls.lm.control(maxiter=1024,nprint=1))
a<-summary(m.2)$coefficients[1]
C<-summary(m.2)$coefficients[2]
cx = 1-(cumsum(as.numeric(PSpecAVG1)/sum(PSpecAVG1)))# construct the empirical CDF
drat<-Xvec[(i+1):min(which(ds$x>UC))]
cf<-1-(cumsum((C*drat^a)/
sum(C*drat^a)))
#mapply(function(X,Y){1-cumsum((Y*xmins[i:length(xmins)]^X)/sum(Y*xmins[i:length(xmins)]^X))},X=a,Y=C)
#cf<-mapply(function(X,Y){
# lapply(1:18,function(l){1-cumsum((Y[[l]]*xmins[i:length(xmins)]^X[[l]])/
# sum(Y[[l]]*xmins[i:length(xmins)]^X[[l]]))}),
#},X=a,Y=C)
#mapply(function(X,col){print(abs(X-cf[,col]))},X=cx,col=1:length(z2))
dataC[i,1]<-max(abs(cx-cf))
dataC[i,2]<-a
dataC[i,3]<-C
}
i = which(dataC[1:50,1]==min(dataC[1:50,1]))
i
dataC[24,]
source('~/Desktop/PowSpecfittingApp.R')
setwd("~/Dropbox/Ashwin/Q92P2852PowSpecPatches")
Gallpatches<-list.files(getwd(),recursive=TRUE)
GVps<-lapply(Gallpatches,function(x){read.csv(x,header=TRUE)})
GPSpec=GVps
GPSpecF = lapply(GPSpec, function(x){x[,2]})
Xvec<-(0:512)/1024
ds<-data.frame(y=unlist(GPSpecF),x=rep(Xvec,37))
dataC<-matrix(nrow=length(Xvec)-1,ncol=3)
rhs<-function(x,b0,b1){b0*x^b1}
PSpecAVG<-rep(0,times=length(ds$x)/37)
SDvec<--rep(0,times=length(ds$x)/37)
for(i in 1:length(PSpecAVG)){PSpecAVG[i]<-mean(c(ds$y[which(ds$x==(i-1)/1024)]))
SDvec[i]<-sqrt(var((c(ds$y[which(ds$x==(i-1)/1024)]))))}
for(i in 1:50){
UC=0.3
ds1<-ds[-c(which(ds$x<i/1024),which(ds$x>UC)),]
PSpecAVG1<-PSpecAVG[(i+1):min(which(ds$x>UC))]
SDvec1<-SDvec[(i+1):min(which(ds$x>UC))]
#m.2<-nls(y~ rhs(x,intercept,power), data=ds1, start=list(power=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
#                                  intercept=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1])))
#,trace=T)
m.2 <- nlsLM(formula=y~(k*x^a),data=ds1,start=list(a=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
k=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1]))),
weights = wfct(1/error^2),control = nls.lm.control(maxiter=1024,nprint=1))
a<-summary(m.2)$coefficients[1]
C<-summary(m.2)$coefficients[2]
cx = 1-(cumsum(as.numeric(PSpecAVG1)/sum(PSpecAVG1)))# construct the empirical CDF
drat<-Xvec[(i+1):min(which(ds$x>UC))]
cf<-1-(cumsum((C*drat^a)/
sum(C*drat^a)))
#mapply(function(X,Y){1-cumsum((Y*xmins[i:length(xmins)]^X)/sum(Y*xmins[i:length(xmins)]^X))},X=a,Y=C)
#cf<-mapply(function(X,Y){
# lapply(1:18,function(l){1-cumsum((Y[[l]]*xmins[i:length(xmins)]^X[[l]])/
# sum(Y[[l]]*xmins[i:length(xmins)]^X[[l]]))}),
#},X=a,Y=C)
#mapply(function(X,col){print(abs(X-cf[,col]))},X=cx,col=1:length(z2))
dataC[i,1]<-max(abs(cx-cf))
dataC[i,2]<-a
dataC[i,3]<-C
}
which(dataC[1:50,1]==min(dataC[1:50,1]))
for(i in 1:50){
UC=0.3
ds1<-ds[-c(which(ds$x<i/1024),which(ds$x>UC)),]
PSpecAVG1<-PSpecAVG[(i+1):min(which(ds$x>UC))]
SDvec1<-SDvec[(i+1):min(which(ds$x>UC))]
#m.2<-nls(y~ rhs(x,intercept,power), data=ds1, start=list(power=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
#                                  intercept=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1])))
#,trace=T)
m.2 <- nlsLM(formula=y~(k*x^a),data=ds1,start=list(a=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
k=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1]))),
weights = wfct(1/error^2),control = nls.lm.control(maxiter=1024,nprint=1))
a<-summary(m.2)$coefficients[1]
C<-summary(m.2)$coefficients[2]
cx = 1-cumsum(as.numeric(PSpecAVG1)/sum(PSpecAVG1))# construct the empirical CDF
drat<-Xvec[(i+1):min(which(ds$x>UC))]
cf<-1-cumsum((C*drat^a)/
sum(C*drat^a))
#mapply(function(X,Y){1-cumsum((Y*xmins[i:length(xmins)]^X)/sum(Y*xmins[i:length(xmins)]^X))},X=a,Y=C)
#cf<-mapply(function(X,Y){
# lapply(1:18,function(l){1-cumsum((Y[[l]]*xmins[i:length(xmins)]^X[[l]])/
# sum(Y[[l]]*xmins[i:length(xmins)]^X[[l]]))}),
#},X=a,Y=C)
#mapply(function(X,col){print(abs(X-cf[,col]))},X=cx,col=1:length(z2))
dataC[i,1]<-max(abs(cx-cf))
dataC[i,2]<-a
dataC[i,3]<-C
}
i = which(dataC[1:50,1]==min(dataC[1:50,1]))
i
DataC[,i]
DataC[i,]
dataC[i,]
dataC[13,]
dataC[20,]
dataC[19,]
dataC[18,]
dataC[17,]
dataC[15,]
dataC[14,]
dataC[16,]
dataC[10:20,]
dataC[10:25,]
dataC[10:30,]
dataC[1:30,]
i=8
ds1<-ds[-c(which(ds$x<i/1024),which(ds$x>UC)),]
m.1 <- nlsLM(formula=y~(k*x^a),data=ds1,start=list(a=as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[2]),
k=exp(as.numeric(lm(log(as.numeric(ds1$y))~log(as.numeric(ds1$x)))$coefficients[1]))),
weights = wfct(1/error^2),control = nls.lm.control(maxiter=1024,nprint=1))
summary(m.1)
ds1$pred <- predict(m.1)
se = summary(m.1)$sigma
ci = outer(ds1$pred, c(outer(se, c(-1,1), '*'))*1.96, '+')
ii = order(ds1$x)
# typical plot with confidence interval
with(ds1[ii,], points(x, pred, ylim=range(ci), type='l',col="green"))
matlines(ds1[ii,'x'], ci[ii,], lty=2, col=1)
ds1$pred <- predict(m.1)
se = summary(m.1)$sigma
ci = outer(ds1$pred, c(outer(se, c(-1,1), '*'))*1.96, '+')
ii = order(ds1$x)
# typical plot with confidence interval
with(ds1[ii,], points(x, pred, ylim=range(ci), type='l',lwd=1.5,col="blue"))
matlines(ds1[ii,'x'], ci[ii,], lty=2, col=1)
plot(ds1$y~ds1$x,pch=16)
plot(ds1$y~ds1$x,pch=16,log="xy")
plot(m1)
plot(m.1)
plot(ds1$y~ds1$x,pch=16,log="xy")
ds1$pred <- predict(m.1)
se = summary(m.1)$sigma
ci = outer(ds1$pred, c(outer(se, c(-1,1), '*'))*1.96, '+')
ii = order(ds1$x)
# typical plot with confidence interval
with(ds1[ii,], points(x, pred, ylim=range(ci), type='l',lwd=1.5,col="blue"))
matlines(ds1[ii,'x'], ci[ii,], lty=2, col=1)
source('~/Desktop/PowSpecfittingApp.R')
